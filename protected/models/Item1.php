<?php/** * This is the model class for table "{{items}}". * * The followings are the available columns in table '{{items}}': * @property integer $id * @property integer $category_id * @property string $item_name * @property string $item_sn * @property integer $item_number * @property string $price * @property string $wholesale_price * @property string $item_image * @property string $item_desc * @property integer $if_show * @property integer $is_new * @property integer $recommended * @property integer $create_time * @property integer $update_time */class item extends CActiveRecord {    /**     * Returns the static model of the specified AR class.     * @return item the static model class     */    public static function model($className = __CLASS__) {        return parent::model($className);    }    /**     * @return string the associated database table name     */    public function tableName() {        return '{{items}}';    }    /**     * @return array validation rules for model attributes.     */    public function rules() {        // NOTE: you should only define rules for those attributes that        // will receive user inputs.        return array(            array('category_id, item_name, item_image', 'required'),            array('category_id, item_number, if_show, is_new, recommended, type, sort_order, create_time, update_time', 'numerical', 'integerOnly' => true),            array('item_name', 'length', 'max' => 100),            array('item_sn', 'length', 'max' => 60),            array('price, wholesale_price', 'length', 'max' => 10),            array('guige, item_image', 'length', 'max' => 200),            // The following rule is used by search().            // Please remove those attributes that should not be searched.            array('id, category_id, item_name, item_sn, item_number, caizhi, minOrder, if_logo, price, wholesale_price, item_image, item_desc, if_show, is_new, recommended, type, create_time, update_time', 'safe', 'on' => 'search'),        );    }    /**     * @return array relational rules.     */    public function relations() {        // NOTE: you may need to adjust the relation name and the related        // class name for the relations automatically generated below.        return array(            'category' => array(self::BELONGS_TO, 'Category', 'category_id'),        );    }    /**     * @return array customized attribute labels (name=>label)     */    public function attributeLabels() {        return array(            'id' => 'ID',            'category_id' => '商品分类',            'item_name' => '商品名称',            'item_sn' => '商品编号',            'item_number' => '库存',            'price' => '零售价',            'wholesale_price' => '批发价',            'item_image' => '商品图片',            'item_desc' => '商品描述',            'if_show' => '上架',            'is_tejia' => '特价',            'is_new' => '新品',            'recommended' => '推荐',            'type' => '类型',            'guige' => '规格',            'caizhi' => '材质',            'minOrder' => '最小订货量',            'if_logo' => '定制LOGO',            'sort_order' => '排序',            'create_time' => '发布时间',            'update_time' => '更新时间',        );    }    /**     * Retrieves a list of models based on the current search/filter conditions.     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.     */    public function search() {        // Warning: Please modify the following code to remove attributes that        // should not be searched.        $criteria = new CDbCriteria;        $criteria->order = 'id desc, sort_order asc';        $criteria->compare('id', $this->id);        $criteria->compare('category_id', $this->category_id);        $criteria->compare('item_name', $this->item_name, true);        $criteria->compare('item_sn', $this->item_sn, true);        $criteria->compare('item_number', $this->item_number);        $criteria->compare('price', $this->price, true);        $criteria->compare('wholesale_price', $this->wholesale_price, true);        $criteria->compare('item_image', $this->item_image, true);        $criteria->compare('item_desc', $this->item_desc, true);        $criteria->compare('if_show', $this->if_show);        $criteria->compare('is_new', $this->is_new);        $criteria->compare('recommended', $this->recommended);        $criteria->compare('create_time', $this->create_time);        $criteria->compare('update_time', $this->update_time);        return new CActiveDataProvider(get_class($this), array(                    'criteria' => $criteria,                ));    }    public function getRecommendThumb() {        $img = '/upload/item/' . $this->item_image;        $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(150, 200, $img, array('method' => 'resize'));        $img_thumb_now = CHtml::image($img_thumb, $this->item_name);        return CHtml::link($img_thumb_now, array('/item/view', 'id' => $this->id));    }    public function getIndexThumb() {        $img = '/upload/item/' . $this->item_image;        $trueimage = 'http://wcydboss.com' . $img;        if (F::isfile($trueimage)) {            $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(150, 150, $img, array('method' => 'resize'));            $img_thumb_now = CHtml::image($img_thumb, $this->item_name);            return CHtml::link($img_thumb_now, array('/item/view', 'id' => $this->id));        } else {            return 'No Pic';        }    }    public function getSmallThumb() {        $img = '/upload/item/' . $this->item_image;        $trueimage = 'http://wcydboss.com' . $img;        if (F::isfile($trueimage)) {            $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(40, 40, $img, array('method' => 'resize'));            $img_thumb_now = CHtml::image($img_thumb, $this->item_name);            return CHtml::link($img_thumb_now, array('/item/view', 'id' => $this->id));        } else {            return 'No Pic';        }    }    public function getThumb() {        $img = '/upload/item/' . $this->item_image;        $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(250, 250, $img, array('method' => 'adaptiveResize'));        $img_thumb_now = CHtml::image($img_thumb, $this->item_name);        return CHtml::link($img_thumb_now, array('/item/view', 'id' => $this->id), array('rel' => $this->getPreviewImage()));    }    public function getPreviewImage() {        $img = '/upload/item/' . $this->item_image;        $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(320, 320, $img, array('method' => 'resize'));        return $img_thumb;    }    public function getImage() {        $img = '/upload/item/' . $this->item_image;        $trueimage = 'http://wcydboss.com' . $img;        if (F::isfile($trueimage)) {            $img_thumb = Yii::app()->request->baseUrl . ImageHelper::thumb(320, 320, $img, array('method' => 'resize'));            $img_thumb_now = CHtml::image($img_thumb, $this->item_name);            return $img_thumb_now;        } else {            return 'No Pic';        }    }    public function getShow() {        echo $this->if_show == 1 ? '是' : '否';    }    public function getTejia() {        echo $this->is_tejia == 1 ? '是' : '否';    }    public function getNew() {        echo $this->is_new == 1 ? '是' : '否';    }    public function getLogo() {        echo $this->if_logo == 1 ? '是' : '否';    }    public function getRecommend() {        echo $this->recommended == 1 ? '是' : '否';    }    public function beforeSave() {        if (parent::beforeSave()) {            if ($this->isNewRecord) {                $this->create_time = $this->update_time = time();            }            else                $this->update_time = time();            return true;        }        else            return false;    }}