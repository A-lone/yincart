<?phpclass ItemController extends Controller {    public $layout = '//layouts/column3';    public function actionIndex() {        $id = $_REQUEST['cate_id'];        $pp_id = $_REQUEST['pp_id'];        $price = $_REQUEST['price'];        $cate = Pcat::model()->findByPk($id);        if ($pp_id) {            $condition = $pp_id ? 'if_show = 1 and pp_id =' . $pp_id : 'if_show = 1';        }        if ($id) {            $catmodel = new Pcat();            $ids = $catmodel->getMeChildsId($id);            $cid = implode(',', $ids);            $condition = $id ? 'if_show = 1 and cate_id in(' . $cid . ')' : 'if_show = 1';        }        if ($price) {            if ($price && $id) {                $catmodel = new Pcat();                $ids = $catmodel->getMeChildsId($id);                $cid = implode(',', $ids);                $condition = $id ? 'if_show = 1 and  price=' . $price . ' and cate_id in(' . $cid . ')' : 'if_show = 1';            }        }        $keyword = $_REQUEST['keyword'];        if ($keyword) {            $condition = $keyword ? 'if_show = 1 and item_name like' . "'%$keyword%'" : 'if_show = 1';        }        $criteria = new CDbCriteria(array(                    'condition' => $condition,                    'order' => 'sort_order asc, id desc'                ));        $count = Item::model()->count($criteria);        $pages = new CPagination($count);        // results per page        $pages->pageSize = 20;        $pages->applyLimit($criteria);        $item = Item::model()->findAll($criteria);        $this->render('index', array(            'item' => $item,            'pages' => $pages,            'keyword' => $keyword,            'cate' => $cate        ));    }    /**     * Displays a particular model.     * @param integer $id the ID of the model to be displayed     */    public function actionView($id) {        $this->render('view', array(            'model' => $this->loadModel($id),        ));    }    /**     * Returns the data model based on the primary key given in the GET variable.     * If the data model is not found, an HTTP exception will be raised.     * @param integer the ID of the model to be loaded     */    public function loadModel($id) {        $model = Item::model()->findByPk((int) $id);        if ($model === null)            throw new CHttpException(404, 'The requested page does not exist.');        return $model;    }    // Uncomment the following methods and override them if needed    /*      public function filters()      {      // return the filter configuration for this controller, e.g.:      return array(      'inlineFilterName',      array(      'class'=>'path.to.FilterClass',      'propertyName'=>'propertyValue',      ),      );      }      public function actions()      {      // return external action classes, e.g.:      return array(      'action1'=>'path.to.ActionClass',      'action2'=>array(      'class'=>'path.to.AnotherActionClass',      'propertyName'=>'propertyValue',      ),      );      }     */}